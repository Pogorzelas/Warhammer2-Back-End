"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var MongooseCoreModule_1;
const common_1 = require("@nestjs/common");
const core_1 = require("@nestjs/core");
const mongoose = require("mongoose");
const rxjs_1 = require("rxjs");
const mongoose_constants_1 = require("./mongoose.constants");
const mongoose_utils_1 = require("./mongoose.utils");
let MongooseCoreModule = MongooseCoreModule_1 = class MongooseCoreModule {
    constructor(connectionName, moduleRef) {
        this.connectionName = connectionName;
        this.moduleRef = moduleRef;
    }
    static forRoot(uri, options = {}) {
        const { retryAttempts, retryDelay, connectionName } = options, mongooseOptions = __rest(options, ["retryAttempts", "retryDelay", "connectionName"]);
        const mongooseConnectionNameProvider = {
            provide: 'MONGOOSE_CONNECTION_NAME',
            useValue: connectionName || mongoose_constants_1.DefaultDbConnectionToken,
        };
        const connectionProvider = {
            provide: connectionName || mongoose_constants_1.DefaultDbConnectionToken,
            useFactory: () => __awaiter(this, void 0, void 0, function* () {
                return yield rxjs_1.of(mongoose.createConnection(uri, mongooseOptions))
                    .pipe(mongoose_utils_1.handleRetry(retryAttempts, retryDelay))
                    .toPromise();
            }),
        };
        return {
            module: MongooseCoreModule_1,
            providers: [connectionProvider, mongooseConnectionNameProvider],
            exports: [connectionProvider],
        };
    }
    onModuleDestroy() {
        return __awaiter(this, void 0, void 0, function* () {
            const connection = this.moduleRef.get(this.connectionName);
            connection && (yield connection.close());
        });
    }
};
MongooseCoreModule = MongooseCoreModule_1 = __decorate([
    common_1.Global(),
    common_1.Module({}),
    __param(0, common_1.Inject('MONGOOSE_CONNECTION_NAME')),
    __metadata("design:paramtypes", [String, core_1.ModuleRef])
], MongooseCoreModule);
exports.MongooseCoreModule = MongooseCoreModule;
